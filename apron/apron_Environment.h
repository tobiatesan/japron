/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class apron_Environment */

#ifndef _Included_apron_Environment
#define _Included_apron_Environment
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     apron_Environment
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_apron_Environment_init__
  (JNIEnv *, jobject);

/*
 * Class:     apron_Environment
 * Method:    init
 * Signature: ([Ljava/lang/String;[Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_apron_Environment_init___3Ljava_lang_String_2_3Ljava_lang_String_2
  (JNIEnv *, jobject, jobjectArray, jobjectArray);

/*
 * Class:     apron_Environment
 * Method:    finalize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_apron_Environment_finalize
  (JNIEnv *, jobject);

/*
 * Class:     apron_Environment
 * Method:    class_init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_apron_Environment_class_1init
  (JNIEnv *, jclass);

/*
 * Class:     apron_Environment
 * Method:    add
 * Signature: ([Ljava/lang/String;[Ljava/lang/String;)Lapron/Environment;
 */
JNIEXPORT jobject JNICALL Java_apron_Environment_add
  (JNIEnv *, jobject, jobjectArray, jobjectArray);

/*
 * Class:     apron_Environment
 * Method:    addPerm
 * Signature: ([Ljava/lang/String;[Ljava/lang/String;[Lapron/Dimperm;)Lapron/Environment;
 */
JNIEXPORT jobject JNICALL Java_apron_Environment_addPerm
  (JNIEnv *, jobject, jobjectArray, jobjectArray, jobjectArray);

/*
 * Class:     apron_Environment
 * Method:    remove
 * Signature: ([Ljava/lang/String;)Lapron/Environment;
 */
JNIEXPORT jobject JNICALL Java_apron_Environment_remove
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     apron_Environment
 * Method:    lce
 * Signature: (Lapron/Environment;)Lapron/Environment;
 */
JNIEXPORT jobject JNICALL Java_apron_Environment_lce__Lapron_Environment_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     apron_Environment
 * Method:    lce
 * Signature: ([Lapron/Environment;)Lapron/Environment;
 */
JNIEXPORT jobject JNICALL Java_apron_Environment_lce___3Lapron_Environment_2
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     apron_Environment
 * Method:    rename
 * Signature: ([Ljava/lang/String;[Ljava/lang/String;[Lapron/Dimperm;)Lapron/Environment;
 */
JNIEXPORT jobject JNICALL Java_apron_Environment_rename
  (JNIEnv *, jobject, jobjectArray, jobjectArray, jobjectArray);

/*
 * Class:     apron_Environment
 * Method:    getDimension
 * Signature: ()Lapron/Dimension;
 */
JNIEXPORT jobject JNICALL Java_apron_Environment_getDimension
  (JNIEnv *, jobject);

/*
 * Class:     apron_Environment
 * Method:    hasVar
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_apron_Environment_hasVar
  (JNIEnv *, jobject, jstring);

/*
 * Class:     apron_Environment
 * Method:    dimOfVar
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_apron_Environment_dimOfVar
  (JNIEnv *, jobject, jstring);

/*
 * Class:     apron_Environment
 * Method:    varOfDim
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_apron_Environment_varOfDim
  (JNIEnv *, jobject, jint);

/*
 * Class:     apron_Environment
 * Method:    getIntVars
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_apron_Environment_getIntVars
  (JNIEnv *, jobject);

/*
 * Class:     apron_Environment
 * Method:    getRealVars
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_apron_Environment_getRealVars
  (JNIEnv *, jobject);

/*
 * Class:     apron_Environment
 * Method:    getVars
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_apron_Environment_getVars
  (JNIEnv *, jobject);

/*
 * Class:     apron_Environment
 * Method:    dimchange
 * Signature: (Lapron/Environment;)Lapron/Dimchange;
 */
JNIEXPORT jobject JNICALL Java_apron_Environment_dimchange
  (JNIEnv *, jobject, jobject);

/*
 * Class:     apron_Environment
 * Method:    dimchange2
 * Signature: (Lapron/Environment;)[Lapron/Dimchange;
 */
JNIEXPORT jobjectArray JNICALL Java_apron_Environment_dimchange2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     apron_Environment
 * Method:    isEqual
 * Signature: (Lapron/Environment;)Z
 */
JNIEXPORT jboolean JNICALL Java_apron_Environment_isEqual
  (JNIEnv *, jobject, jobject);

/*
 * Class:     apron_Environment
 * Method:    isIncluded
 * Signature: (Lapron/Environment;)Z
 */
JNIEXPORT jboolean JNICALL Java_apron_Environment_isIncluded
  (JNIEnv *, jobject, jobject);

/*
 * Class:     apron_Environment
 * Method:    cmp
 * Signature: (Lapron/Environment;)I
 */
JNIEXPORT jint JNICALL Java_apron_Environment_cmp
  (JNIEnv *, jobject, jobject);

/*
 * Class:     apron_Environment
 * Method:    hashCode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_apron_Environment_hashCode
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
