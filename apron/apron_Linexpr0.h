/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class apron_Linexpr0 */

#ifndef _Included_apron_Linexpr0
#define _Included_apron_Linexpr0
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     apron_Linexpr0
 * Method:    init
 * Signature: (ZI)V
 */
JNIEXPORT void JNICALL Java_apron_Linexpr0_init__ZI
  (JNIEnv *, jobject, jboolean, jint);

/*
 * Class:     apron_Linexpr0
 * Method:    init
 * Signature: (Lapron/Linexpr0;)V
 */
JNIEXPORT void JNICALL Java_apron_Linexpr0_init__Lapron_Linexpr0_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    finalize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_apron_Linexpr0_finalize
  (JNIEnv *, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    class_init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_apron_Linexpr0_class_1init
  (JNIEnv *, jclass);

/*
 * Class:     apron_Linexpr0
 * Method:    setCoeff
 * Signature: (ILapron/Coeff;)V
 */
JNIEXPORT void JNICALL Java_apron_Linexpr0_setCoeff
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    setCst
 * Signature: (Lapron/Coeff;)V
 */
JNIEXPORT void JNICALL Java_apron_Linexpr0_setCst
  (JNIEnv *, jobject, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    getCoeff
 * Signature: (I)Lapron/Coeff;
 */
JNIEXPORT jobject JNICALL Java_apron_Linexpr0_getCoeff
  (JNIEnv *, jobject, jint);

/*
 * Class:     apron_Linexpr0
 * Method:    getCst
 * Signature: ()Lapron/Coeff;
 */
JNIEXPORT jobject JNICALL Java_apron_Linexpr0_getCst
  (JNIEnv *, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    getLinterms
 * Signature: ()[Lapron/Linterm0;
 */
JNIEXPORT jobjectArray JNICALL Java_apron_Linexpr0_getLinterms
  (JNIEnv *, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    getSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_apron_Linexpr0_getSize
  (JNIEnv *, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    maxDim
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_apron_Linexpr0_maxDim
  (JNIEnv *, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    hashCode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_apron_Linexpr0_hashCode
  (JNIEnv *, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    isSparse
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_apron_Linexpr0_isSparse
  (JNIEnv *, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    isInteger
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_apron_Linexpr0_isInteger
  (JNIEnv *, jobject, jint);

/*
 * Class:     apron_Linexpr0
 * Method:    isReal
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_apron_Linexpr0_isReal
  (JNIEnv *, jobject, jint);

/*
 * Class:     apron_Linexpr0
 * Method:    isLinear
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_apron_Linexpr0_isLinear
  (JNIEnv *, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    isQuasilinear
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_apron_Linexpr0_isQuasilinear
  (JNIEnv *, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    isEqual
 * Signature: (Lapron/Linexpr0;)Z
 */
JNIEXPORT jboolean JNICALL Java_apron_Linexpr0_isEqual
  (JNIEnv *, jobject, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    cmp
 * Signature: (Lapron/Linexpr0;)I
 */
JNIEXPORT jint JNICALL Java_apron_Linexpr0_cmp
  (JNIEnv *, jobject, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    resize
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_apron_Linexpr0_resize
  (JNIEnv *, jobject, jint);

/*
 * Class:     apron_Linexpr0
 * Method:    minimize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_apron_Linexpr0_minimize
  (JNIEnv *, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    addDimensions
 * Signature: (Lapron/Dimchange;)V
 */
JNIEXPORT void JNICALL Java_apron_Linexpr0_addDimensions
  (JNIEnv *, jobject, jobject);

/*
 * Class:     apron_Linexpr0
 * Method:    permuteDimensions
 * Signature: (Lapron/Dimperm;)V
 */
JNIEXPORT void JNICALL Java_apron_Linexpr0_permuteDimensions
  (JNIEnv *, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
